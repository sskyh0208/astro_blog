---
// src/pages/tags/[tag]/[page].astro
import Card from "../../../components/Card.astro";
import PageNavigation from "../../../components/PageNavigation.astro";
import BaseLayout from "../../../layouts/BaseLayout.astro";
import { Icon } from 'astro-icon/components'
import { postsPerPage } from "../../../lib/config";

export async function getStaticPaths({ paginate }) {
  const allPosts = await Astro.glob("../../../pages/posts/*.md");
  const uniqueTags = [...new Set(allPosts.map((post) => post.frontmatter.tags).flat())]
  const allPostsSorted = allPosts.sort(
    (a, b) => new Date(b.frontmatter.pubDate).valueOf() - new Date(a.frontmatter.pubDate).valueOf()
  );

  return uniqueTags.flatMap((tag) => {
    const filteredPosts = allPostsSorted.filter((post) => 
      post.frontmatter.tags.includes(tag)
    );
    return paginate(filteredPosts, {
      params: { tag },
      pageSize: postsPerPage,
      props: { tag }
    });
  });
}

const { tag } = Astro.params;
const { page } = Astro.props;
const currentPage = page.currentPage;
const lastPage = page.lastPage;
const VISIBLE_PAGES = 5;

function generateFivePageNumbers(current: number, last: number) {
  let startPage = Math.max(
    1,
    Math.min(current - Math.floor(VISIBLE_PAGES / 2), last - VISIBLE_PAGES + 1)
  );
  
  return Array.from(
    { length: Math.min(VISIBLE_PAGES, last) },
    (_, i) => startPage + i
  );
}

const pageNumbers = generateFivePageNumbers(currentPage, lastPage);
---

<BaseLayout pageTitle={tag}>
  <div class="flex justify-center items-center text-3xl font-bold py-20">
    <Icon name="mdi:tag" class="mr-2" />
    <h1>{tag}</h1>
  </div>
  <div class="grid grid-cols-1 md:grid-cols-2 place-items-center gap-y-4 px-4 md:px-8">
    {page.data.map((post) => (
      <Card
        authorIcon={post.frontmatter.authorIcon}
        author={post.frontmatter.author}
        url={post.url}
        date={post.frontmatter.pubDate.toString().slice(0, 10)}
        title={post.frontmatter.title}
        description={post.frontmatter.description}
        image={post.frontmatter.image}
        tag={post.frontmatter.tags[0]}
      />
    ))}
  </div>
  {lastPage > 1 && (
    <PageNavigation page={page} currentPage={currentPage} pageNumbers={pageNumbers} />
  )}
</BaseLayout>