---
import "../../styles/global.css";
import BaseLayout from "../../layouts/BaseLayout.astro";
import Card from "../../components/Card.astro";
import PageTitle from "../../components/PageTitle.astro";
import { postsPerPage } from "../../lib/config";
import PageNavigation from "../../components/PageNavigation.astro";

const pageTitle = "記事一覧";

export async function getStaticPaths({ paginate }) {
  const allPosts = await Astro.glob("../../pages/posts/*.md");
  const allPostsSorted = allPosts.sort(
    (a, b) => new Date(b.frontmatter.pubDate).valueOf() - new Date(a.frontmatter.pubDate).valueOf()
  );
  return paginate(allPostsSorted, { pageSize: postsPerPage });
};

const { page } = Astro.props;
const currentPage = page.currentPage;
const lastPage = page.lastPage;
const VISIBLE_PAGES = 5;

// 表示する5つのページ番号を生成
function generateFivePageNumbers(current: number, last: number) {
  // 表示開始ページを計算
  let startPage = Math.max(
    1,
    Math.min(current - Math.floor(VISIBLE_PAGES / 2), last - VISIBLE_PAGES + 1)
  );
  
  // ページ番号の配列を生成（最大5つ）
  return Array.from(
    { length: Math.min(VISIBLE_PAGES, last) },
    (_, i) => startPage + i
  );
}

const pageNumbers = generateFivePageNumbers(currentPage, lastPage);
---
<BaseLayout pageTitle={pageTitle}>
  <PageTitle title={pageTitle}/>
  <div class="grid grid-cols-1 md:grid-cols-2 place-items-center gap-y-4 px-4 md:px-8">
    {page.data.map((post, index) => (
      <Card
        authorIcon={post.frontmatter.authorIcon}
        author={post.frontmatter.author}
        url={post.url}
        date={post.frontmatter.pubDate.toString().slice(0, 10)}
        title={post.frontmatter.title}
        description={post.frontmatter.description}
        image={post.frontmatter.image}
        tag={post.frontmatter.tags[0]}
      />
    ))}
  </div>
  {lastPage > 1 && (
    <PageNavigation page={page} currentPage={currentPage} pageNumbers={pageNumbers} />
  )}
</BaseLayout>
